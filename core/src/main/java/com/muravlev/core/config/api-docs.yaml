openapi: 3.0.1
info:
  title: Информация
  description: Описание информации
  termsOfService: Муравлёв
  contact:
    name: Dmitry
    email: dmur1991@gmail.com
  license:
    name: MURAVLEV
    url: ya.ru
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /users/{id}:
    get:
      tags:
      - user-controller
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
    put:
      tags:
      - user-controller
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
    delete:
      tags:
      - user-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /channels/{id}:
    get:
      tags:
      - channel-controller
      operationId: getChannelById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelDTO'
    put:
      tags:
      - channel-controller
      operationId: updateChannel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelDTO'
    delete:
      tags:
      - channel-controller
      operationId: deleteChannel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /channels/{id}/type:
    put:
      tags:
      - channel-controller
      operationId: setChannelType
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
              enum:
              - PUBLIC
              - PRIVATE
        required: true
      responses:
        "200":
          description: OK
  /users/create:
    post:
      tags:
      - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
  /posts:
    post:
      tags:
      - post-controller
      operationId: createPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostDTO'
  /channels/{channelId}/unsubscribe/{userId}:
    post:
      tags:
      - channel-controller
      operationId: unsubscribe
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: channelId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /channels/{channelId}/subscribe/{userId}:
    post:
      tags:
      - channel-controller
      operationId: subscribe
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: channelId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /channels/invite:
    post:
      tags:
      - channel-controller
      operationId: invite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationDTO'
        required: true
      responses:
        "200":
          description: OK
  /channels/invitations/{id}/decline:
    post:
      tags:
      - channel-controller
      operationId: declineInvitation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: OK
  /channels/invitations/{id}/accept:
    post:
      tags:
      - channel-controller
      operationId: acceptInvitation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: OK
  /channels/create:
    post:
      tags:
      - channel-controller
      operationId: createChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelDTO'
  /users/exists/{id}:
    get:
      tags:
      - user-controller
      operationId: existsById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /users/allusers:
    get:
      tags:
      - user-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
  /posts/{id}:
    get:
      tags:
      - post-controller
      operationId: getPostById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostDTO'
    delete:
      tags:
      - post-controller
      operationId: deletePost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /posts/exists/{id}:
    get:
      tags:
      - post-controller
      operationId: existsById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /posts/channel/{channelId}:
    get:
      tags:
      - post-controller
      operationId: getAllPostsByChannelId
      parameters:
      - name: channelId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostDTO'
  /channels/exists/{id}:
    get:
      tags:
      - channel-controller
      operationId: existsById_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
components:
  schemas:
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        password:
          type: string
        email:
          type: string
    ChannelDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
          enum:
          - PUBLIC
          - PRIVATE
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/UserDTO'
        creatorId:
          type: integer
          format: int64
    PostDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
        imageUrl:
          type: string
        authorId:
          type: integer
          format: int64
        channelId:
          type: integer
          format: int64
        creationTime:
          type: string
          format: date-time
    InvitationDTO:
      type: object
      properties:
        inviterId:
          type: integer
          format: int64
        inviteeId:
          type: integer
          format: int64
        channelId:
          type: integer
          format: int64
